*{
  box-sizing: border-box;
  background-origin: border-box;
  margin: 0;
}

/* My idea is to put some brief but meaningful interactivity in something that alot of people use to relax or study. 
I really like synthwave music and I've found that its a genre that has a lot of songs that still sound smooth when sped up. So, I thought 
for a relaxation/study audio player synthwave is the most comprehensive. I've implemented LIT MODE which is for people who tend to listen to music
while studying or working on whatever, who may want to up the energy if it's late at night or you're just not motivated. Lit mode has is a playbackrate button.
With each click it cycles through playback rates 1.0, 1.25, and 1.5. This could be used as a short-term pickmeup if the slow tempo is making you drowsy
or you're generally tired. Although it's just a playback rate button, theres various visible feedback such as the bg image, heroimage changing and saturating in
relation to the speed. Obviously, one isn't expected to spend too long looking at this media player as it's purpose is audio; however, whether you're seeking
relaxation or to up your focus for a final push to get the assignment done, I find visual stimulation of this kind beneficial regardless. A media player
like this also allows hardworking students to take a much needed break as they enjoy a colorful interactive webpage, I believe that occasional distraction
can be better than constant focus; it refreshs your brain.*/ 
:root{
  --col-02:#f0f6f0;
  --col-03:#5252ff;
  --col-04:#b6e878;
  --col-05:#bcbdbc;
  --col-06:#6f6f6f;
  --border: 1px solid var(--col-02);
  color: aliceblue;
}

body {
    height: 750px;
    display: inline-block;
}

#bgLayer {
  content: "";
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  filter: saturate(100%); /* Initial saturation level (adjust as needed) */
  z-index: -1; /* Place the pseudo-element behind other content */
  background-size: 50%;
  background-image: url("images/dullimg.png");
  display: inline-block;
}

#topdiv {
  height:3cm; 
max-width: 80%;
}

.audio-player-wrapper{
  display: flex;
  flex-direction: column;
  width: 50%;
  margin: 0 auto;
}

/* becuase I want to overlay the play icon on the audio they need to be in their own wrapper */
.audio-element-wrapper{
  display: grid;
  justify-items: end;
  align-items: start;
  overflow:visible;
}

#audioElement{
  width: 100%;
  grid-column: 1/2;
  grid-row: 1/2;
}

#heroImage{
  width: 100%;
  grid-column: 1/2;
  grid-row: 1/2;
  filter: saturate(0%);
}

#audioPlayOverlay{
  width: 8rem;
  height: 8rem;
  grid-column: 1/2;
  grid-row: 1/2;
  justify-self: center;
  align-self: center;
  opacity: 0.6;
  pointer-events: none;
  display: none;
}

.audio-controls-wrapper{
  display: flex;
  justify-content: center;
}
/* this overwrites the above display:flex - something which is then undone when the JS loads */
#controlsWrapper{
  display: none;
}

.audio-control-button{
  width: 2rem;
  height: 2rem;
  padding: .1rem;
  border: none;
  cursor: pointer;
}
.audio-control-button:hover{
  background-color: var(--col-05);
}
.audio-control-button:active{
  background-color: var(--col-06);
}
.button-icon{
  pointer-events: none;
}

#playButton{
  background-image: url('./icons/play.svg');
}

#muteButton{
  background-image: url('./icons/mute.svg');
}

.audio-progress-bar{
  /* Reset the default appearance */
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  height: 2rem;
  flex-grow: 1;
  cursor: pointer;
  background-color: var(--col-01);
  box-shadow: 0 1px 2px var(--col-02) inset;
}
::-moz-progress-bar {
  background-color: var(--col-02);
}

::-webkit-progress-bar {
  background-color: var(--col-01);
  box-shadow: 0 1px 2px var(--col-02) inset;
}
::-webkit-progress-value {
  background-color: var(--col-02);
}

.timeline-loading{
  background-image: -moz-repeating-linear-gradient(45deg, var(--col-03) 0% 2%, transparent 2% 4%, red 4%);
  background-size: 200% 100%;
  animation: loadingAnimation 4s linear infinite;
}

@keyframes loadingAnimation {
  100%{
    background-position: 50% 0%;
  }
}

.attribution a {
color:aliceblue;

}

.textOverlays {
  position: absolute;
  z-index: 1;
  font: 120px 'Playfair Display', serif;
  width: 120px;
  display: none;
  filter: saturate(0%);
  color: #00000000;
  }
  

.specificText {
  font-size: 40px;
}

h span {
  display: table-cell;
  margin: 0;
  padding: 0;
}
.animated {
  animation: animate 2.5s linear infinite;
}

.paused {
  animation-play-state: paused;
}

 h span:nth-child(1)
{
  animation-delay: 0s;
}
h span:nth-child(2)
{
  animation-delay: 0.20s;
}
h span:nth-child(3)
{
  animation-delay: 0.40s;
}
h span:nth-child(4)
{
  animation-delay: 0.60s;
}
h span:nth-child(5)
{
  animation-delay: 0.80s;
} 

@keyframes animate
{
    5%, 90%
    {
      opacity: 100%;
      color: #ffffff;
      filter: blur(2.5px);
      text-shadow: 0 0 20px #4800ff,
                  0 0 40px #4800ff,
                  0 0 80px #4800ff;               
    }
    0%,100%
    {
      color: #ffffff00;
      filter: blur(0px);
      text-shadow: none;
      opacity: 0%;

    }


}


#litbuttondiv {
  display: flex;
  justify-content: center;
}

#litButton {
background-color: #8f81f6;
color: #1b145f;
width: 80%;
height: 50px;
font: 18px 'Playfair Display', serif;
border-radius: 8px;
border: 3px outset;
display: 5;
box-shadow: 0 0 5px #8e75d4,
0 0 25px #4400ffc1;
}



#litButton:hover {
  width: 80%;
  height: 50px;
  font: 18px 'Playfair Display', serif;
  border-radius: 8px;
  border: 1px outset;
  box-shadow: 0 0 5px #8e75d4,
0 0 25px #4400ffc1, 0 0 50px #8e75d4,
0 0 100px #8e75d4;
}
